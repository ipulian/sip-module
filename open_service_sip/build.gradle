def isApp = false
if (isApp) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: 'com.github.dcendents.android-maven'
group = 'com.github.team.github@51lianlian.com'

android {

    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        if (isApp) {
            applicationId "com.ipusoft.sipmodule"
        }
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: this.project.getName()]
            }
        }

        ndk {
            setAbiFilters(["armeabi-v7a", "arm64-v8a", "armeabi", 'x86', 'x86_64', 'mips', 'mips64'])
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            if (isApp) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java.srcDir 'src/main/debug'
            } else {
                manifest.srcFile 'src/main/manifest/AndroidManifest.xml'
            }
            jniLibs.srcDirs = ['libs']
        }
    }
    buildFeatures { dataBinding = true }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    annotationProcessor 'com.alibaba:arouter-compiler:1.5.1'
    if (isApp) {
        implementation project(":context:context")
    } else {
        implementation 'com.github.ipulian:ipusdk:1.6.34'
        //implementation project(":context:context")
    }

    /**
     *  沉浸式状态栏
     *  https://github.com/gyf-dev/ImmersionBar
     */

//    implementation 'com.gyf.immersionbar:immersionbar:3.2.1'
//    implementation 'com.gyf.immersionbar:immersionbar-components:3.2.1'
//    implementation 'com.gyf.immersionbar:immersionbar-ktx:3.2.1'

    /**
     * Retrofit2
     */
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'
    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'

    /**
     * RxJava + RxAndroid
     */
    implementation "io.reactivex.rxjava3:rxjava:3.0.12"
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
}